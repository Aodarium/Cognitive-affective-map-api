openapi: 3.0.0
info:
    title: Camel open source api
    description: Api in charge nof handling data collection and experiment supports
    version: 0.1.0
servers:
    - url: http://localhost:3001
      description: Main (test) server

paths:
    /researcher/login:
        post:
            summary: Returns a list of users.
            description: Optional extended description in CommonMark or HTML.
            responses:
                "200": # status code
                    description: A JSON array of user names
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
    /researcher/signup:
        post:
            summary: Register an account.
            description: Endpoint in charge of registering a new account. Only administrators can add new accounts.
            requestBody:
                description: Optional description in *Markdown*
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    format: email
                                password:
                                    type: string
                                    format: password
                                role:
                                    type: string
                                    enum: [ACTIVE, INACTIVE, ARCHIVED]
                                jwt:
                                    type: string
                                    description: token given while loging in
            responses:
                "201": # status code
                    description: A new account is created
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                                        example: "researcher created with id XXX"
                "401":
                    description: Mising information or incorrect role.
                "409":
                    description: Email already taken.
                "500":
                    description: Error while computing information.

    /researcher/updateRole:
        put:
            summary: Returns a list of users.
            description: Optional extended description in CommonMark or HTML.
            responses:
                "200": # status code
                    description: A JSON array of user names
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
    /researcher/updatePaid:
        put:
            summary: Returns a list of users.
            description: Optional extended description in CommonMark or HTML.
            responses:
                "200": # status code
                    description: A JSON array of user names
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
    /researcher/addExperiment:
        post:
            summary: Returns a list of users.
            description: Optional extended description in CommonMark or HTML.
            responses:
                "200": # status code
                    description: A JSON array of user names
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
    /researcher/getExperimentByAuthor:
        post:
            summary: Returns a list of users.
            description: Optional extended description in CommonMark or HTML.
            responses:
                "200": # status code
                    description: A JSON array of user names
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
    /researcher/getExperimentById:
        post:
            summary: Returns a list of users.
            description: Optional extended description in CommonMark or HTML.
            responses:
                "200": # status code
                    description: A JSON array of user names
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
    /researcher/changeExperimentStatus:
        put:
            summary: Returns a list of users.
            description: Optional extended description in CommonMark or HTML.
            responses:
                "200": # status code
                    description: A JSON array of user names
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
    /researcher/deleteExperiment:
        delete:
            summary: Returns a list of users.
            description: Optional extended description in CommonMark or HTML.
            responses:
                "200": # status code
                    description: A JSON array of user names
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
